
// Tipos clínicos específicos
export type ClinicalAlertType = 
  | 'síntoma'
  | 'fecha'
  | 'inactividad';

export type AlertTrigger = 
  | 'fecha_programada'
  | 'texto_IA'
  | 'falta_sesión'
  | 'manual';

export type AlertType = 
  | 'appointment'
  | 'medication'
  | 'followup'
  | 'emergency'
  | 'custom'
  | ClinicalAlertType;

export type AlertStatus = 
  | 'activa'
  | 'resuelta'
  | 'cancelada'
  | 'expirada';

export type AlertUrgency = 
  | 'baja'
  | 'media'
  | 'alta'
  | 'crítica';

export type NotificationChannel = 
  | 'email'
  | 'whatsapp'
  | 'sms'
  | 'push';

// Interface principal para alertas clínicas
export interface ClinicalAlert {
  id: string;
  centerId: string;
  patientId: string;
  createdBy: string; // UID del profesional que creó la alerta
  type: AlertType;
  trigger: AlertTrigger;
  title: string;
  description: string;
  urgency: AlertUrgency;
  status: AlertStatus;
  scheduledFor?: Date;
  createdAt: Date;
  updatedAt: Date;
  resolvedAt?: Date;
  resolvedBy?: string;
  notes?: string; // Notas adicionales o de resolución
  autoGenerated: boolean;
  sourceSessionId?: string; // ID de sesión que generó la alerta
  notificationChannels: NotificationChannel[];
  notificationSent: boolean;
  whatsappMessageId?: string;
  lastTriggered?: Date;
  metadata?: {
    sessionId?: string;
    appointmentId?: string;
    medicationId?: string;
    detectedKeywords?: string[];
    aiConfidence?: number;
    daysSinceLastSession?: number;
    customData?: Record<string, unknown>;
  };
}

// Compatibilidad con interface anterior
export type Alert = ClinicalAlert;

export interface AlertFormData {
  patientId: string;
  type: AlertType;
  trigger: AlertTrigger;
  title: string;
  description: string;
  urgency: AlertUrgency;
  scheduledFor?: Date;
  notes?: string;
  notificationChannels: NotificationChannel[];
  metadata?: {
    sessionId?: string;
    appointmentId?: string;
    medicationId?: string;
    customData?: Record<string, unknown>;
  };
}

export interface AlertFilters {
  patientId?: string;
  createdBy?: string;
  type?: AlertType;
  trigger?: AlertTrigger;
  status?: AlertStatus;
  urgency?: AlertUrgency;
  autoGenerated?: boolean;
  dateRange?: {
    start?: Date;
    end?: Date;
  };
  search?: string;
}

export interface AlertStats {
  total: number;
  active: number;
  resolved: number;
  cancelled: number;
  expired: number;
  highUrgency: number;
  autoGenerated: number;
  pendingNotifications: number;
  byType: Record<AlertType, number>;
  byUrgency: Record<AlertUrgency, number>;
  byTrigger: Record<AlertTrigger, number>;
}

export interface AlertNotification {
  id: string;
  alertId: string;
  channel: NotificationChannel;
  recipient: string;
  sentAt: Date;
  status: 'pending' | 'sent' | 'delivered' | 'failed';
  errorMessage?: string;
  retryCount: number;
  maxRetries: number;
}

export interface AlertTemplate {
  id: string;
  centerId: string;
  name: string;
  type: AlertType;
  title: string;
  description: string;
  urgency: AlertUrgency;
  notificationChannels: NotificationChannel[];
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date;
}

export interface AlertRule {
  id: string;
  centerId: string;
  name: string;
  description: string;
  isActive: boolean;
  conditions: {
    patientCriteria?: {
      ageRange?: { min: number; max: number };
      diagnosis?: string[];
      riskLevel?: string[];
    };
    sessionCriteria?: {
      missedAppointments?: number;
      daysSinceLastSession?: number;
      emotionalState?: string[];
    };
    timeCriteria?: {
      daysOfWeek?: number[];
      timeOfDay?: { start: string; end: string };
      frequency?: 'daily' | 'weekly' | 'monthly';
    };
  };
  actions: {
    createAlert: {
      type: AlertType;
      title: string;
      description: string;
      urgency: AlertUrgency;
      notificationChannels: NotificationChannel[];
    };
  };
  createdAt: Date;
  updatedAt: Date;
}

// Constantes para alertas clínicas
export const CLINICAL_ALERT_TYPES: ClinicalAlertType[] = ['síntoma', 'fecha', 'inactividad'];
export const ALERT_TRIGGERS: AlertTrigger[] = ['fecha_programada', 'texto_IA', 'falta_sesión', 'manual'];
export const ALERT_TYPES: AlertType[] = ['appointment', 'medication', 'followup', 'emergency', 'custom', ...CLINICAL_ALERT_TYPES];
export const ALERT_STATUSES: AlertStatus[] = ['activa', 'resuelta', 'cancelada', 'expirada'];
export const ALERT_URGENCIES: AlertUrgency[] = ['baja', 'media', 'alta', 'crítica'];

export const ALERT_TYPE_LABELS: Record<AlertType, string> = {
  'appointment': 'Cita',
  'medication': 'Medicamento',
  'followup': 'Seguimiento',
  'emergency': 'Emergencia',
  'custom': 'Personalizada',
  'síntoma': 'Síntoma Detectado',
  'fecha': 'Fecha Programada',
  'inactividad': 'Inactividad del Paciente'
};

export const ALERT_TRIGGER_LABELS: Record<AlertTrigger, string> = {
  'fecha_programada': 'Fecha programada',
  'texto_IA': 'Análisis de IA',
  'falta_sesión': 'Falta de sesión',
  'manual': 'Manual'
};

export const ALERT_URGENCY_LABELS: Record<AlertUrgency, string> = {
  'baja': 'Baja',
  'media': 'Media',
  'alta': 'Alta',
  'crítica': 'Crítica'
};

export const ALERT_STATUS_LABELS: Record<AlertStatus, string> = {
  'activa': 'Activa',
  'resuelta': 'Resuelta',
  'cancelada': 'Cancelada',
  'expirada': 'Expirada'
};

export const ALERT_URGENCY_COLORS: Record<AlertUrgency, string> = {
  'baja': '#4caf50',
  'media': '#ff9800',
  'alta': '#f44336',
  'crítica': '#d32f2f'
};

export const ALERT_STATUS_COLORS: Record<AlertStatus, string> = {
  'activa': '#2196f3',
  'resuelta': '#4caf50',
  'cancelada': '#9e9e9e',
  'expirada': '#757575'
};

export const ALERT_TYPE_COLORS: Record<AlertType, string> = {
  'appointment': '#2196f3',
  'medication': '#4caf50',
  'followup': '#9c27b0',
  'emergency': '#f44336',
  'custom': '#ff9800',
  'síntoma': '#e91e63',
  'fecha': '#3f51b5',
  'inactividad': '#795548'
};

// Configuración de notificaciones WhatsApp
export interface WhatsAppTemplate {
  id: string;
  name: string;
  language: string;
  components: {
    type: 'HEADER' | 'BODY' | 'FOOTER';
    parameters?: { type: 'TEXT'; text: string }[];
  }[];
}

export const WHATSAPP_TEMPLATES: Record<string, WhatsAppTemplate> = {
  patient_reminder: {
    id: 'patient_reminder',
    name: 'patient_session_reminder',
    language: 'es',
    components: [
      {
        type: 'BODY',
        parameters: [
          { type: 'TEXT', text: '{{1}}' }, // Nombre del paciente
          { type: 'TEXT', text: '{{2}}' }, // Fecha y hora
          { type: 'TEXT', text: '{{3}}' }  // Nombre del profesional
        ]
      }
    ]
  },
  professional_alert: {
    id: 'professional_alert',
    name: 'professional_alert',
    language: 'es',
    components: [
      {
        type: 'BODY',
        parameters: [
          { type: 'TEXT', text: '{{1}}' }, // Tipo de alerta
          { type: 'TEXT', text: '{{2}}' }, // Nombre del paciente
          { type: 'TEXT', text: '{{3}}' }  // Descripción
        ]
      }
    ]
  },
  emergency_alert: {
    id: 'emergency_alert',
    name: 'emergency_alert',
    language: 'es',
    components: [
      {
        type: 'HEADER'
      },
      {
        type: 'BODY',
        parameters: [
          { type: 'TEXT', text: '{{1}}' }, // Nombre del paciente
          { type: 'TEXT', text: '{{2}}' }  // Descripción de la crisis
        ]
      }
    ]
  },
  symptom_alert: {
    id: 'symptom_alert',
    name: 'symptom_detection_alert',
    language: 'es',
    components: [
      {
        type: 'BODY',
        parameters: [
          { type: 'TEXT', text: '{{1}}' }, // Nombre del paciente
          { type: 'TEXT', text: '{{2}}' }, // Síntomas detectados
          { type: 'TEXT', text: '{{3}}' }  // Nivel de confianza
        ]
      }
    ]
  },
  inactivity_alert: {
    id: 'inactivity_alert',
    name: 'patient_inactivity_alert',
    language: 'es',
    components: [
      {
        type: 'BODY',
        parameters: [
          { type: 'TEXT', text: '{{1}}' }, // Nombre del paciente
          { type: 'TEXT', text: '{{2}}' }, // Días sin sesión
          { type: 'TEXT', text: '{{3}}' }  // Última sesión
        ]
      }
    ]
  }
};

// Log de acciones de alertas
export interface AlertActionLog {
  id: string;
  centerId: string;
  alertId: string;
  action: 'created' | 'triggered' | 'resolved' | 'cancelled' | 'notification_sent' | 'notification_failed';
  performedBy: string; // 'system' para acciones automáticas
  details: string;
  timestamp: Date;
  metadata?: Record<string, unknown>;
}

// Configuración de automatizaciones
export interface AlertAutomationConfig {
  id: string;
  centerId: string;
  name: string;
  description: string;
  isActive: boolean;
  triggerType: AlertTrigger;
  conditions: {
    keywords?: string[];
    inactivityDays?: number;
    urgencyThreshold?: AlertUrgency;
    patientCriteria?: {
      riskLevel?: string[];
      diagnosis?: string[];
    };
  };
  actions: {
    createAlert: boolean;
    sendNotification: boolean;
    escalate: boolean;
    channels: NotificationChannel[];
  };
  createdAt: Date;
  updatedAt: Date;
}

// Métricas de alertas
export interface AlertMetrics {
  period: 'day' | 'week' | 'month' | 'year';
  totalAlerts: number;
  resolvedAlerts: number;
  averageResolutionTime: number; // en horas
  alertsByType: Record<AlertType, number>;
  alertsByUrgency: Record<AlertUrgency, number>;
  automationEffectiveness: {
    totalAutoAlerts: number;
    falsePositives: number;
    accuracy: number;
  };
  responseMetrics: {
    averageResponseTime: number;
    notificationDeliveryRate: number;
    escalationRate: number;
  };
}